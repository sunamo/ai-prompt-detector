/**
 * ƒåITELNOST: Soubor mus√≠ z≈Østat v≈ædy plnƒõ ƒçiteln√Ω pro program√°tora.
 * ≈Ω√°dn√© umƒõl√© zkracov√°n√≠ ≈ô√°dk≈Ø, sluƒçov√°n√≠ nesouvisej√≠c√≠ch p≈ô√≠kaz≈Ø na jeden ≈ô√°dek
 * ani minifikace. Sn√≠≈æen√≠ poƒçtu ≈ô√°dk≈Ø bez jasn√©ho, zdokumentovan√©ho zlep≈°en√≠
 * ƒçitelnosti je REGRESE a mus√≠ b√Ωt vr√°ceno. Zachov√°vej logick√© bloky a vertik√°ln√≠ strukturu.
 */

/**
 * ‚ö†Ô∏è UNMODIFIABLE COMPONENT - DO NOT MODIFY! ‚ö†Ô∏è
 *
 * This file contains FROZEN, WORKING functionality that must NOT be changed.
 * Any modifications to this file are STRICTLY FORBIDDEN without explicit user permission.
 *
 * Component: Status Bar Display
 * Purpose: Shows version and prompt counter in VS Code status bar
 * Created: 2025-10-30
 * Status: LOCKED ‚úÖ
 */

import * as vscode from 'vscode';

/**
 * Status bar configuration and state.
 */
export interface StatusBarConfig {
  /** VS Code status bar item instance */
  item: vscode.StatusBarItem;
  /** Current prompt counter value */
  counter: number;
  /** Whether proposed API is available */
  proposedApiAvailable: boolean;
}

/**
 * Vytvo≈ô√≠ a inicializuje status bar item.
 * @param proposedApiAvailable Zda je dostupn√© proposed API
 * @returns Nakonfigurovan√Ω status bar item
 */
export function createStatusBar(proposedApiAvailable: boolean): vscode.StatusBarItem {
  const statusBarItem = vscode.window.createStatusBarItem(
    vscode.StatusBarAlignment.Right,
    100,
  );

  // Update tooltip based on API availability (no backgroundColor)
  if (proposedApiAvailable) {
    statusBarItem.tooltip = '‚úÖ AI Prompt Detector\n‚úÖ Proposed API enabled\n‚úÖ Mouse detection WORKING';
  } else {
    statusBarItem.tooltip = '‚ö†Ô∏è AI Prompt Detector\n‚ùå Proposed API disabled\n‚ö†Ô∏è Mouse detection LIMITED\nüí° Run: code-insiders --enable-proposed-api sunamocz.ai-prompt-detector';
  }

  statusBarItem.show();
  return statusBarItem;
}

/**
 * Aktualizuje text ve status baru.
 * ALWAYS use "AI Prompts:" prefix (never just "AI:")
 * @param statusBarItem Status bar item k aktualizaci
 * @param counter Aktu√°ln√≠ poƒçet prompt≈Ø
 * @param proposedApiAvailable Zda je dostupn√© proposed API
 */
export function updateStatusBar(
  statusBarItem: vscode.StatusBarItem,
  counter: number,
  proposedApiAvailable: boolean
): void {
  const ext = vscode.extensions.getExtension('sunamocz.ai-prompt-detector');
  const version: string | undefined = ext?.packageJSON?.version;

  if (!version) {
    vscode.window.showErrorMessage('AI Copilot Prompt Detector: missing package.json version');
    statusBarItem.text = 'ü§ñ AI Prompts: ' + counter + ' | v?';
    return;
  }

  // Add indicator for API status - ALWAYS use "AI Prompts:" not "AI:"
  const apiIndicator = proposedApiAvailable ? '‚úÖ' : '‚ö†Ô∏è';
  statusBarItem.text = `${apiIndicator} AI Prompts: ${counter} | v${version}`;
}

/**
 * Nastav√≠ tooltip kdy≈æ je patch API detekov√°no.
 * @param statusBarItem Status bar item k aktualizaci
 */
export function setStatusBarPatchedTooltip(statusBarItem: vscode.StatusBarItem): void {
  statusBarItem.tooltip = 'üéâ AI Prompt Detector\n‚úÖ VS Code PATCHED\n‚úÖ onDidSubmitInput API WORKING\n‚úÖ Mouse detection FULLY WORKING!';
}
